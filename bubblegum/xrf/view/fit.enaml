# ######################################################################
# Copyright (c) 2014, Brookhaven Science Associates, Brookhaven        #
# National Laboratory. All rights reserved.                            #
#                                                                      #
# Redistribution and use in source and binary forms, with or without   #
# modification, are permitted provided that the following conditions   #
# are met:                                                             #
#                                                                      #
# * Redistributions of source code must retain the above copyright     #
#   notice, this list of conditions and the following disclaimer.      #
#                                                                      #
# * Redistributions in binary form must reproduce the above copyright  #
#   notice this list of conditions and the following disclaimer in     #
#   the documentation and/or other materials provided with the         #
#   distribution.                                                      #
#                                                                      #
# * Neither the name of the Brookhaven Science Associates, Brookhaven  #
#   National Laboratory nor the names of its contributors may be used  #
#   to endorse or promote products derived from this software without  #
#   specific prior written permission.                                 #
#                                                                      #
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS  #
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT    #
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS    #
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE       #
# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,           #
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES   #
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR   #
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)   #
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,  #
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OTHERWISE) ARISING   #
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   #
# POSSIBILITY OF SUCH DAMAGE.                                          #
########################################################################

import numpy as np

from enaml.widgets.api import (Container, PushButton, Label,
                               Form, Field, FileDialogEx, DockItem,
                               DockArea, CheckBox, ComboBox, ScrollArea)
from enaml.layout.api import hbox, vbox, HSplitLayout, VSplitLayout, spacer


enamldef FitView(DockItem):
    attr fileio_m
    attr param_m
    attr plot_m
    attr fit_m
    Container:
        constraints = [
            vbox(
                hbox(pb1, pb2, spacer),
                lbl0,
                hbox(lbl1, cb1, spacer),
                hbox(lbl2, cb2, spacer),
                hbox(lbl3, cb3, spacer),
                hbox(pb_fit, pb_plot, spacer),
            ),
        ]
        PushButton: pb1:
            text = 'Import Parameter Data'
            clicked ::
                fit_m.data = fileio_m.data
                fit_m.param_dict = param_m.param_d
        PushButton: pb2:
            text = 'Import From New File'
            clicked ::
                pass
        Label: lbl0:
            text = 'Fitting Strategy'
        Label: lbl1:
            text = 'Step 1'
        ComboBox: cb1:
            items = ['', 'free global', 'free pos/width/branch']
        Label: lbl2:
            text = 'Step 2'
        ComboBox: cb2:
            items = ['', 'free global', 'free pos/width/branch']
        Label: lbl3:
            text = 'Step 3'
        ComboBox: cb3:
            items = ['', 'free global', 'free pos/width/branch']
        PushButton: pb_fit:
            text = 'Fit'
            clicked ::
                fit_m.fit_data()
                pb_plot.enabled = True
                plot_m.fit_x = fit_m.fit_x
                plot_m.fit_y = fit_m.fit_y
                plot_m.fit_all = fit_m.comps
                plot_m.plot_fit()
        PushButton: pb_plot:
            text = 'Overlap to Spectrum'
            checkable = True
            enabled = False
            clicked ::
                if checked:
                    plot_m.show_fit_opt = True
                else:
                    plot_m.show_fit_opt = False
