# ######################################################################
# Copyright (c) 2014, Brookhaven Science Associates, Brookhaven        #
# National Laboratory. All rights reserved.                            #
#                                                                      #
# Redistribution and use in source and binary forms, with or without   #
# modification, are permitted provided that the following conditions   #
# are met:                                                             #
#                                                                      #
# * Redistributions of source code must retain the above copyright     #
#   notice, this list of conditions and the following disclaimer.      #
#                                                                      #
# * Redistributions in binary form must reproduce the above copyright  #
#   notice this list of conditions and the following disclaimer in     #
#   the documentation and/or other materials provided with the         #
#   distribution.                                                      #
#                                                                      #
# * Neither the name of the Brookhaven Science Associates, Brookhaven  #
#   National Laboratory nor the names of its contributors may be used  #
#   to endorse or promote products derived from this software without  #
#   specific prior written permission.                                 #
#                                                                      #
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS  #
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT    #
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS    #
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE       #
# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,           #
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES   #
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR   #
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)   #
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,  #
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OTHERWISE) ARISING   #
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   #
# POSSIBILITY OF SUCH DAMAGE.                                          #
########################################################################

__author__ = 'Li Li'

from enaml.widgets.api import (Container, PushButton, Label,
                               Form, Field, FileDialogEx, DockItem,
                               DockArea, CheckBox, ComboBox, SpinBox,
                               ScrollArea, Window, PopupView, GroupBox)
from enaml.layout.api import hbox, vbox, HSplitLayout, VSplitLayout, spacer, grid
from enaml.core.api import Include, Looper
from enaml.layout.geometry import Box
from enaml.stdlib.fields import FloatField


enamldef SettingView(DockItem):
    attr io_model
    attr plot_model
    attr setting_model

    Container:
        Container:
            constraints = [
                vbox(
                    hbox(setup_lbl, spacer),
                    hbox(element_fd),
                    scroller,
                ),
                #folder_btn.width == files_btn.width,
            ]
            Label: setup_lbl:
                text = 'ROI Setup: enter elements below, e.g., Fe_K, Gd_L'
            Field: element_fd:
                text >> setting_model.element_input

            ScrollArea: scroller:
                #Form:
                Container:
                    Label: title_lb:
                        text = 'data'
                        text = '{:>6} {:>16} {:>16} {:>16} {:>16}'.format('Element', 'Energy [eV]', 'Left [eV]',
                                                                    'Right [eV]', 'Add/Remove')
                    Looper: looper:
                        #iterable << element_fd.text.split(', ')

                        iterable << sorted(setting_model.element_list)
                        GroupBox:
                        #Container:
                            constraints = [hbox(name_lb, mean_lb, left_v, right_v, view_btn)]
                            #title = loop_item
                            #title_align = 'center'
                            padding = Box(0, 0, 0, 0)
                            #Form:
                            #row_spacing=0
                            #Field: name_lb:
                            #    text = loop_item #setting_model[loop_item].element_n
                            Label: name_lb:
                                text = loop_item
                            Field: mean_lb:
                                text := str(setting_model.roi_dict[loop_item].line_val*1000)
                                maximum_size = 100
                            SpinBox: left_v:
                                value := int(setting_model.roi_dict[loop_item].left_val*1000)
                                single_step = setting_model.roi_dict[loop_item].step
                                maximum_size = 100
                                minimum = 0
                                maximum = 100000
                            SpinBox: right_v:
                                value := int(setting_model.roi_dict[loop_item].right_val*1000)
                                single_step = setting_model.roi_dict[loop_item].step
                                maximum_size = 100
                                minimum = 0
                                maximum = 100000
                            PushButton: view_btn:
                                text = 'Plot lines'
                                checkable = True
                                #checked := setting_model.roi_dict[loop_item].show_plot
                                clicked ::
                                    if checked:
                                        setting_model.roi_dict[loop_item].show_plot = True
                                        plot_model.roi_dict = setting_model.roi_dict
                                        plot_model.show_roi_bound()
                                    else:
                                        setting_model.roi_dict[loop_item].show_plot = False
                                        plot_model.roi_dict = setting_model.roi_dict
                                        plot_model.show_roi_bound()

                        #Field: fd2:
                        #    text := io_model.data_sets[loop_item].point2
                        #    maximum_size = 100
                        #    enabled = False


