language: python
sudo: false

cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/.ccache

global:
  - SUBMIT_CODECOV=false
  - BUILD_DOCS=false
  - FLAKE8=false

jobs:
  fast_finish: true
  include:
    - python: 3.8
      env: FLAKE8=true NUMPY=1.20  # Separate test case for flake8
    - python: 3.7
      env: BUILD_DOCS=true SUBMIT_CODECOV=true NUMPY=1.20
    - python: 3.8
      env: BUILD_DOCS=true SUBMIT_CODECOV=true NUMPY=1.20
    - python: 3.9
      env: BUILD_DOCS=true SUBMIT_CODECOV=true NUMPY=1.20
    - os: osx
      language: generic
      env: TRAVIS_PYTHON_VERSION=3.6 NUMPY=1.19
    - os: osx
      language: generic
      env: TRAVIS_PYTHON_VERSION=3.7 NUMPY=1.19
  allow_failures:
    - python: 3.9
      env: BUILD_DOCS=true SUBMIT_CODECOV=true NUMPY=1.20

before_install:
  - if [ $FLAKE_8 == 'true' ]; then
      pip install flake8;
      flake8 .;
      let res=$?;
      echo "The project code was verified with 'flake8'. Exit code ($res).";
      exit $res;
    fi
  - |
    set -e
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      # Install 'herbstluftwm' (on Linux only)
      sudo apt-get update
      sudo apt-get install -y xvfb herbstluftwm
    fi
  - |
    set -e
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
        arch="Linux"
    elif [ "$TRAVIS_OS_NAME" == "osx" ]; then
        arch="MacOSX"
    else
        echo "Unknown arch $TRAVIS_OS_NAME"
        exit 1
    fi
    wget https://repo.continuum.io/miniconda/Miniconda3-latest-${arch}-x86_64.sh -O miniconda.sh
    chmod +x miniconda.sh
    ./miniconda.sh -b -p ~/mc
    source ~/mc/etc/profile.d/conda.sh
    conda update conda --yes
    export CONDARC=ci/condarc

install:
  - |
    set -e
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      # Run 'xvfb' (on Linux only)
      export DISPLAY=:99.0
      sudo /sbin/start-stop-daemon --start --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1920x1200x24 -ac +extension GLX +render -noreset
      sleep 3
    fi
  - export GIT_FULL_HASH=`git rev-parse HEAD`
  - conda create -y -n testenv python=$TRAVIS_PYTHON_VERSION numpy=$NUMPY pyqt numba -c conda-forge
  # Note: 'numba' fails to install properly from PyPI on OSX
  - conda activate testenv
  - conda install -y 'scikit-beam>=0.0.24' -c conda-forge
  #- conda install -y scikit-beam -c nsls2forge
  #- conda update -y scikit-beam -c nsls2forge  # Update, because sometimes a very old version is installed :(
  - python -m pip install --upgrade pip setuptools
  - pip install -r requirements.txt
  - pip install -r requirements-dev.txt
  - pip install codecov
  - pip install .
  - conda list
  - pip list

before_script:
  - |
    set -e
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      # Run 'herbstluftwm' (on Linux only)
      herbstluftwm &
      sleep 1
    fi

script:
- python -c "import platform; import os; ver_installed = platform.python_version();
  ver_requested = os.environ['TRAVIS_PYTHON_VERSION'];
  assert ver_installed.startswith(f'{ver_requested}.');"
- python -c "import numpy; import os; ver_installed = numpy.__version__;
  ver_requested = os.environ['NUMPY'];
  assert ver_installed.startswith(f'{ver_requested}.')"
- flake8
- coverage run run_tests.py
- coverage report -m
- |
  set -e  # If any of the following steps fail, just stop at that point.
  if [ $BUILD_DOCS == 'true' ]; then
    pip install -r requirements-docs.txt
    make -C docs html  # Build the documentation.
    # Disable Jekyll theme
    touch docs/_build/html/.nojekyll
    # doctr deploy --built-docs docs/_build/html .  # Publish the documentation.
  fi

deploy:
  provider: pages
  skip_cleanup: true
  github_token: $GITHUB_TOKEN  # Set in the settings page of your repository, as a secure variable
  keep_history: true
  local_dir: "docs/_build/html"
  on:
    branch: master
    # The following conditions guarantees that the docs will be deployed only if the build
    #   is run in the main repository (this may easily changed)
    condition: $BUILD_DOCS == true && $TRAVIS_REPO_SLUG == "NSLS-II/PyXRF"

after_success:
 - if [ $SUBMIT_CODECOV == 'true' ]; then codecov; fi;
